{"version":3,"sources":["tetris/getRandomFigure.js","tetris/api.js","tetris/index.js"],"names":["getRandomFigure","rand","Math","random","figure","length","round","nawOperand","pyramid","band","hookLeft","hookRight","square","figureS","figureZ","call","name","styleName","y","x","spine","console","log","position","i","checkMap","moveStep","positionX","Tetris","constructor","option","root","speed","widthRoot","children","childElementCount","heightRoot","start","positionY","interval","init","gameOver","gravities","dele","getElementsByClassName","classList","remove","indexCell","colors","stepX","stepY","lope","_this","getRandomInt","min","max","floor","setTimeout","setInterval","goDown","clearInterval","_addControls","document","addEventListener","event","_clickSorting","keyCode","goLeft","goRight","_findClassIn","className","split","check","turningIntoWall","value","arrCell","clear","push","add","removalCheck","removableRows","heightTabele","widthTabele","checkRow","rowCleaning","pressDown","indexRowClean","arrayItem","iRow","cellIndex","indexArray","rowClear","indexRow","clearCell","trace","Error","e","stack","createOperand","figures","tetris","getElementById","elementSpeed","fla","querySelectorAll","elementOptions","checkReload","toggleFigures","id","toggle","addFiguresColor","forEach","item","splice"],"mappings":"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","file":"tetris.e4755062.js","sourceRoot":"..","sourcesContent":["// ============ Model Block ================\n\nexport default function getRandomFigure() {\n  let rand = 0 + Math.random() * (this.figure.length - 1)\n  rand = Math.round(rand);\n\n  switch (this.figure[rand]) { //'pyramid', 'band', 'hookLeft', 'hookRight', 'square', 'figureS', 'figureZ'\n    case 'pyramid':\n    this.nawOperand = pyramid(this);\n      break;\n    case 'band':\n    this.nawOperand = band(this);\n      break;\n    case 'hookLeft':\n    this.nawOperand = hookLeft(this);\n      break;\n    case 'hookRight':\n    this.nawOperand = hookRight(this);\n      break;\n    case 'square':\n    this.nawOperand = square(this);\n      break;\n    case 'figureS':\n    this.nawOperand = figureS(this);\n      break;\n    case 'figureZ':\n    this.nawOperand = figureZ(this);\n      break;\n    // case 'gameOver':\n    // this.nawOperand = gameOver(this);\n    //   break;\n  }\n}\n\n// function gameOver(call) { // ==\n//   return {\n//     name: 'gameOver',\n//     y: [4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15],\n//     x: [1, 2, 5, 9, 11, 14, 15, 16, 0, 4, 6, 8, 10, 12, 14, 0, 4, 5, 6, 8, 12, 14, 15, 16, 0, 2, 4, 6, 8, 12, 14, 1, 2, 4, 6, 8, 12, 14, 15, 16, 1, 2, 5, 7, 9, 10, 11, 13, 14, 16, 0, 3, 5, 7, 9, 13, 16, 0, 3, 5, 7, 9, 10, 11, 13, 15, 0, 3, 5, 7, 9, 13, 16, 1, 2, 6, 9, 10, 11, 13, 16],\n//     spine: () => { console.log('spin')}\n//   };\n// }\n\nfunction square(call) { // ==\n  return {\n    name: 'square',\n    styleName: 'purple',\n    y: [0, 0, 1, 1],\n    x: [0, 1, 0, 1],\n    spine: () => { console.log('spin')}\n  };\n}\n\nfunction band(call) {  //  ----\n  return {\n    name: 'band',\n    styleName: 'red',\n    position: 0,\n    x: [0, 0, 0, 0],\n    y: [0, 1, 2, 3],\n    spine: () => {\n      switch (call.nawOperand.position) {\n        case 1:\n        call.nawOperand.position = 0;\n\n        call.nawOperand.x = [0, 0, 0, 0];\n        call.nawOperand.y = [0, 1, 2, 3];\n          break;\n\n        case 0:\n        call.nawOperand.position = 1;\n\n        call.nawOperand.x = [0, 1, 2, 3];\n        call.nawOperand.y = [0, 0, 0, 0];\n          break;\n      }\n\n      for (let i = 0; i < 4; i += 1) {\n        if(call.checkMap()){\n          console.log('spin');\n          call.moveStep();\n          return;\n        }\n        call.positionX -= 1;\n      }\n    }\n  };\n}\n\nfunction pyramid(call) {\n  return {\n    name: 'pyramid',\n    styleName: 'skyblue',\n    position: 0, // 0, 1, 2, 3.\n    y: [0, 0, 0, 1],\n    x: [0, 1, 2, 1],\n    spine: () => {\n      switch (call.nawOperand.position) {\n        case 3:\n        call.nawOperand.position = 0;\n\n        call.nawOperand.y = [0, 0, 0, 1];\n        call.nawOperand.x = [0, 1, 2, 1];\n          break;\n\n        case 0:\n        call.nawOperand.position = 1;\n\n        call.nawOperand.y = [0, 1, 2, 1];\n        call.nawOperand.x = [0, 0, 0, 1];\n          break;\n\n        case 1:\n        call.nawOperand.position = 2;\n\n        call.nawOperand.y = [1, 1, 1, 0];\n        call.nawOperand.x = [0, 1, 2, 1];\n          break;\n\n        case 2:\n        call.nawOperand.position = 3;\n\n        call.nawOperand.y = [0, 1, 2, 1];\n        call.nawOperand.x = [1, 1, 1, 0];\n          break;\n      }\n\n      for (let i = 0; i < 4; i += 1) {\n        if(call.checkMap()){\n          console.log('spin');\n          call.moveStep();\n          return;\n        }\n        call.positionX -= 1;\n      }\n    }\n  };\n}\n\nfunction hookLeft(call) {\n  return {\n    name: 'hookLeft',\n    styleName: 'green',\n    position: 0, // 0, 1, 2, 3.\n    y: [0, 1, 2, 2],\n    x: [1, 1, 1, 0],\n    spine: () => {\n      switch (call.nawOperand.position) {\n        case 3:\n        call.nawOperand.position = 0;\n\n        call.nawOperand.y = [0, 1, 2, 2];\n        call.nawOperand.x = [1, 1, 1, 0];\n          break;\n\n        case 0:\n        call.nawOperand.position = 1;\n\n        call.nawOperand.y = [0, 0, 0, 1];\n        call.nawOperand.x = [0, 1, 2, 2];\n          break;\n\n        case 1:\n        call.nawOperand.position = 2;\n\n        call.nawOperand.y = [0, 1, 2, 0];\n        call.nawOperand.x = [0, 0, 0, 1];\n          break;\n\n        case 2:\n        call.nawOperand.position = 3;\n\n        call.nawOperand.y = [1, 1, 1, 0];\n        call.nawOperand.x = [0, 1, 2, 0];\n          break;\n      }\n\n      for (let i = 0; i < 4; i += 1) {\n        if(call.checkMap()){\n          console.log('spin');\n          call.moveStep();\n          return;\n        }\n        call.positionX -= 1;\n      }\n    }\n  };\n}\n\nfunction hookRight(call) {\n  return {\n    name: 'hookRight',\n    styleName: 'yellow',\n    position: 0, // 0, 1, 2, 3.\n    y: [0, 1, 2, 2],\n    x: [0, 0, 0, 1],\n    spine: () => {\n      switch (call.nawOperand.position) {\n        case 3:\n        call.nawOperand.position = 0;\n\n        call.nawOperand.y = [0, 1, 2, 2];\n        call.nawOperand.x = [0, 0, 0, 1];\n          break;\n\n        case 0:\n        call.nawOperand.position = 1;\n\n        call.nawOperand.y = [0, 0, 0, 1];\n        call.nawOperand.x = [0, 1, 2, 0];\n          break;\n\n        case 1:\n        call.nawOperand.position = 2;\n\n        call.nawOperand.y = [0, 1, 2, 0];\n        call.nawOperand.x = [1, 1, 1, 0];\n          break;\n\n        case 2:\n        call.nawOperand.position = 3;\n\n        call.nawOperand.y = [1, 1, 1, 0];\n        call.nawOperand.x = [0, 1, 2, 2];\n          break;\n      }\n\n      for (let i = 0; i < 4; i += 1) {\n        if(call.checkMap()){\n          console.log('spin');\n          call.moveStep();\n          return;\n        }\n        call.positionX -= 1;\n      }\n    }\n  };\n}\n\nfunction figureZ(call) {\n  return {\n    name: 'figureZ',\n    styleName: 'blue',\n    position: 0, // 0, 1, 2, 3.\n    y: [0, 0, 1, 1],\n    x: [0, 1, 1, 2],\n    spine: () => {\n      switch (call.nawOperand.position) {\n        case 1:\n        call.nawOperand.position = 0;\n\n        call.nawOperand.y = [0, 0, 1, 1];\n        call.nawOperand.x = [0, 1, 1, 2];\n          break;\n\n        case 0:\n        call.nawOperand.position = 1;\n\n        call.nawOperand.y = [0, 1, 1, 2];\n        call.nawOperand.x = [1, 1, 0, 0];\n          break;\n      }\n\n      for (let i = 0; i < 4; i += 1) {\n        if(call.checkMap()){\n          console.log('spin');\n          call.moveStep();\n          return;\n        }\n        call.positionX -= 1;\n      }\n    }\n  };\n}\n\nfunction figureS(call) {\n  return {\n    name: 'figureS',\n    styleName: 'orange',\n    position: 0, // 0, 1, 2, 3.\n    y: [1, 1, 0, 0],\n    x: [0, 1, 1, 2],\n    spine: () => {\n      switch (call.nawOperand.position) {\n        case 1:\n        call.nawOperand.position = 0;\n\n        call.nawOperand.y = [1, 1, 0, 0];\n        call.nawOperand.x = [0, 1, 1, 2];\n          break;\n\n        case 0:\n        call.nawOperand.position = 1;\n\n        call.nawOperand.y = [0, 1, 1, 2];\n        call.nawOperand.x = [0, 0, 1, 1];\n          break;\n      }\n\n      for (let i = 0; i < 4; i += 1) {\n        if(call.checkMap()){\n          console.log('spin');\n          call.moveStep();\n          return;\n        }\n        call.positionX -= 1;\n      }\n    }\n  };\n}\n","export default class Tetris{\n  constructor(option) {\n    this.root = option.root;\n\n    this.figure = option.figure || ['pyramid', 'band', 'hookLeft', 'hookRight', 'square', 'figureS', 'figureZ'];\n\n    this.getRandomFigure = option.getRandomFigure;\n    this.speed = option.speed || 500;\n\n    this.widthRoot = root.children[0].childElementCount - 1;\n    this.heightRoot = root.childElementCount - 1;;\n\n    // this.gameOverPosition = 2 || 2;\n    this.start = true;\n\n    this.nawOperand = null;\n\n    this.positionY = option.positionX || 0;\n    this.positionX = option.positionX || 4;\n    this.interval = null;\n\n    this.init();\n  }\n\n  gameOver() {\n    this.start = false;\n    this.gravities(false);\n    const dele = this.root.getElementsByClassName(this.nawOperand.styleName);\n    dele[0].classList.remove(this.nawOperand.styleName);\n    dele[0].classList.remove(this.nawOperand.styleName);\n    dele[0].classList.remove(this.nawOperand.styleName);\n    dele[0].classList.remove(this.nawOperand.styleName);\n\n    let indexCell = 0; // индекс клетки с масива\n    const y = [4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15];\n    const x = [1, 2, 5, 9, 11, 14, 15, 16, 0, 4, 6, 8, 10, 12, 14, 0, 4, 5, 6, 8, 12, 14, 15, 16, 0, 2, 4, 6, 8, 12, 14, 1, 2, 4, 6, 8, 12, 14, 15, 16, 1, 2, 5, 7, 9, 10, 11, 13, 14, 15, 0, 3, 5, 7, 9, 13, 15, 0, 3, 5, 7, 9, 10, 11, 13, 14, 0, 3, 5, 7, 9, 13, 15, 1, 2, 6, 9, 10, 11, 13, 15];\n    const colors = ['red', 'green', 'yellow', 'purple', 'skyblue', 'orange', 'blue'];\n\n    function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    let stepX = 0;\n    let stepY = 0;\n\n    function lope(_this){\n      if (stepY === y[indexCell] && stepX === x[indexCell]) {\n        _this.root.children[stepY].children[stepX].classList = '';\n        indexCell += 1;\n      } else {\n        _this.root.children[stepY].children[stepX].classList = colors[getRandomInt(0, 7)];\n      }\n\n      stepX += 1;\n\n      if (stepX === 17) {\n        stepX = 0;\n        stepY += 1;\n      }\n\n      setTimeout(() => lope(_this), 20);\n    }\n\n    lope(this);\n  }\n\n  gravities(start) {\n    if (start) {\n      console.log(this.nawOperand);\n      console.log(this.positionX);\n      console.log(this.positionY);\n      this.interval = setInterval(() => {\n        this.goDown();\n      }, this.speed);\n      return\n    }\n\n    clearInterval(this.interval);\n  }\n\n  _addControls() {\n    document.addEventListener('keydown', (event) => this._clickSorting(event.keyCode));\n  }\n\n  _clickSorting(keyCode) {\n    if (!(this.start)) {\n      console.log('gg');\n      return;\n    }\n    switch(keyCode) {\n      case 65:\n      this.goLeft();\n        break;\n\n      case 87:\n      this.nawOperand.spine();\n        break;\n\n      case 68:\n      this.goRight();\n        break;\n\n      case 83:\n      this.goDown();\n        break;\n\n      default:\n      console.log(keyCode);\n        break;\n    }\n  }\n\n  goLeft() {\n    this.positionX -= 1;\n    if(this.checkMap()){\n      this.moveStep();\n      return;\n    }\n    this.positionX += 1;\n  }\n\n  goRight() {\n    this.positionX += 1;\n    if(this.checkMap()){\n      this.moveStep();\n      return;\n    }\n    this.positionX -= 1;\n  }\n\n  goDown() {\n    this.positionY += 1;\n    if(this.checkMap(true)){\n      this.moveStep();\n      return;\n    }\n    this.positionY -= 1;\n  }\n\n  _findClassIn(classList, className) {\n    if (typeof classList === 'string') classList = classList.split(' ');\n    let check = false;\n\n    for (var i = 0; i < classList.length; i += 1) {\n      if (classList[i] === className) check = true;\n    }\n    return check;\n  }\n\n  checkMap(goDown) {\n    if (goDown) {\n      for (let i = 0; i < 4; i += 1){\n        const x = this.positionX + this.nawOperand.x[i];\n        const y = this.positionY + this.nawOperand.y[i];\n\n        if (!this.root.children[y]) {\n          this.turningIntoWall();\n          return false;\n        }\n        const check = this._findClassIn(this.root.children[y].children[x].classList.value, 'wall')\n\n        if (check) {\n          this.turningIntoWall();\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    for (let i = 0; i < 4; i += 1){\n      const x = this.positionX + this.nawOperand.x[i];\n      const y = this.positionY + this.nawOperand.y[i];\n\n      if (!this.root.children[y].children[x]) {\n        return false;\n      }\n\n      const check = this._findClassIn(this.root.children[y].children[x].classList.value, 'wall')\n\n        if (check) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  moveStep() {\n    const arrCell = document.getElementsByClassName(this.nawOperand.styleName);\n    const clear = [];\n\n    for (let i = 0; i < arrCell.length; i++) {\n      const check = this._findClassIn(arrCell[i].classList.value, 'wall');\n\n      if (!check) {\n        clear.push(arrCell[i]);\n      }\n    }\n\n    if (!!clear.length) {\n      for (let i = clear.length - 1; i >= 0; i -= 1) {\n        clear[i].classList.remove(this.nawOperand.styleName);\n      }\n    }\n\n    for (let i = 0; i < 4; i += 1) {\n      const x = this.positionX + this.nawOperand.x[i];\n      const y = this.positionY + this.nawOperand.y[i];\n\n      this.root.children[y].children[x].classList.add(this.nawOperand.styleName);\n    }\n  }\n\n  removalCheck() {\n    let removableRows = [];\n    const root = this.root;\n\n    const heightTabele = root.childElementCount - 1;\n    const widthTabele = root.children[0].childElementCount - 1;\n\n    for (let y = heightTabele; y >= 0; y -= 1) {\n\n      function checkRow() {\n        for (let x = widthTabele; x >= 0; x -= 1){\n          if (!root.children[y].children[x].classList.length) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      const fillingRow = checkRow();\n      if (fillingRow) removableRows.push(y);\n    }\n\n    if (!!removableRows.length) {\n      this.rowCleaning(removableRows);\n    }\n    return true;\n  }\n\n  pressDown(indexRowClean) {\n    let arrayItem = null;\n\n    for (let iRow = indexRowClean - 1; iRow >= 0; iRow -= 1) {\n      arrayItem = this.root.children[iRow].getElementsByClassName('wall');\n\n      if (!arrayItem.length) return;\n\n      for (let i = arrayItem.length - 1; i >= 0; i -= 1) {\n        const classList = arrayItem[i].classList.value;\n        const cellIndex = arrayItem[i].cellIndex;\n\n        arrayItem[i].classList.value = '';\n\n        this.root.children[iRow + 1].children[cellIndex].classList = classList;\n      }\n    }\n  }\n\n  rowCleaning(indexArray) {\n    this.gravities(false);\n\n    let i = 0;\n\n    const rowClear = (indexRow) => {\n      let x = 0;\n\n      const clearCell = () => {\n        this.root.children[indexRow].children[x].classList = '';\n        x += 1;\n\n        if (x <= this.widthRoot) {\n          setTimeout(() => clearCell(), 20);\n        } else {\n          this.pressDown(indexArray[i] + i);\n\n          i += 1;\n\n          if (!!indexArray[i]) {\n            rowClear(indexArray[i] + i);\n          } else {\n            this.gravities(true);\n          }\n        }\n      }\n\n      clearCell();\n    }\n    rowClear(indexArray[i]);\n  }\n\n  turningIntoWall() {\n    function trace() {\n      try {\n        throw new Error('Моя ошибка');\n      }\n      catch(e) {\n        console.log(e.stack);\n      }\n    }\n    trace();\n\n    for (let i = 0; i < 4; i += 1) {\n      const x = this.positionX + this.nawOperand.x[i];\n      const y = this.positionY + this.nawOperand.y[i] - 1;\n\n      if (y === 0) {\n        this.gameOver();\n        return;\n      };\n      this.root.children[y].children[x].classList.add('wall');\n    }\n    const check = this.removalCheck();\n    if (check) this.createOperand();\n  }\n\n  createOperand() {\n    this.positionX = 4;\n    this.positionY = 0;\n\n    this.getRandomFigure();\n    this.moveStep();\n\n    this.positionY = 1;\n  }\n\n  init() {\n    this._addControls();\n\n    this.gravities(true);\n\n    this.getRandomFigure();\n    this.moveStep();\n  }\n}\n","import getRandomFigure from './getRandomFigure';\nimport Tetris from './api';\n\nconst figures = ['band', 'square']; //['band', 'pyramid', 'hookLeft', 'hookRight', 'square', 'figureS', 'figureZ']\n\n\nconst tetris = new Tetris ({\n  root: document.getElementById('root'),\n  getRandomFigure: getRandomFigure,\n  figure: figures,\n  // positionX: document.getElementById('start_position_x'),\n  // positionY: document.getElementById('start_position_y'),\n});\n\n\n\nconst elementSpeed = document.getElementById('speed');\nconst fla = document.querySelectorAll('.options input[type=\"button\"]');\nconst elementOptions = document.getElementById('options');\n\nlet checkReload = false;\n\nelementOptions.addEventListener('mouseenter', (event) => {\n  tetris.gravities(false);\n});\nelementOptions.addEventListener('mouseleave', (event) => {\n  tetris.gravities(true);\n});\n\nelementSpeed.addEventListener('input', () => {\n  console.log(elementSpeed.value);\n});\nelementSpeed.addEventListener('change', () => {\n  tetris.speed = elementSpeed.value;\n});\n\n\nfor (let i = 0; i < fla.length; i += 1) {\n  fla[i].addEventListener('click', ()=> {\n    toggleFigures(fla[i].id);\n    fla[i].classList.toggle('activeFigure');\n  });\n}\n\nfunction addFiguresColor() {\n  figures.forEach((item) => {\n    for (let i = 0; i < 7; i += 1) {\n      if (fla[i].id === item) fla[i].classList.add('activeFigure');\n    }\n  });\n}\n\nfunction toggleFigures(figure) {\n  let clear = true;\n  figures.forEach((item, i) => {\n    if (item === figure) {\n      clear = false;\n\n      figures.splice(i, 1);\n      tetris.figures = figures;\n    }\n  });\n  if (clear) {\n    figures.push(figure);\n    tetris.figures = figures;\n  }\n}\n\naddFiguresColor();\n"]}